#include <fstream>#include <iostream> #include <math.h>//NOTE: Data in input files is ordered by column. First 100 elements corresponds to first column rather than first row.int main(){  //Read in data files and store here.  //Only need to store for relative error plot.  double num[100][100]={0};  double ana[100][100]={0};  double dif[100][100]={0};//Inputing numerical and analytical data points.  std::ifstream numerical, analytical;  numerical.open("potentialCompare.dat");  analytical.open("CylinderPotential.dat");  for(int col=0;col<100;col++){    for(int row=0;row<100;row++){      double numElement, anaElement;      numerical>>numElement;      analytical>>anaElement;        num[row][col]=numElement;      ana[row][col]=anaElement;      dif[row][col]=fabs(anaElement-numElement);    }  }         //Outputting results  //Output is by row. Not column like input files.  //One for absolute difference, other for relative error.  std::ofstream difference, relative;  difference.open("potentialDiff.dat");  relative.open("relativeError.dat");  //Using only every third data point. Is only to make graph easier to view.   for(int row=0;row<100;row+=3){    for(int col=0;col<100;col+=3){      difference<<dif[row][col]<<" ";      //If analytical is zero at this point, set the result to zero.      //Is to avoid dividing by zero. Not sure if this is best way of handling this.      if(ana[row][col]==0){	relative<<0<<" ";      }      else{       	relative<<fabs(dif[row][col]/ana[row][col])<<" ";      }    }    difference<<"\n";    relative<<"\n";    }    }